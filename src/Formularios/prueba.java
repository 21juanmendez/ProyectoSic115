/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Formularios;

import Conexiones.ConexionDB;
import java.awt.BorderLayout;
import java.util.List;
import java.util.ArrayList;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juann
 */
public class prueba extends javax.swing.JPanel {

    DefaultTableModel modeloTabla; // Variable de clase para el modelo de tabla

    /**
     * Creates new form libroMayor2
     */
    public prueba() {
        initComponents();
        modeloTabla = new DefaultTableModel(); // Inicializa el modelo de tabla
        modeloTabla.addColumn("Codigo");
        modeloTabla.addColumn("Cuenta");
        modeloTabla.addColumn("SumaDebe");
        modeloTabla.addColumn("SumaHaber");
        modeloTabla.addColumn("Mayorizacion");
        jTableMayorizacion.setModel(modeloTabla); // Asigna el modelo a la tabla

        mostrarEfectivo();
        mostrarCaja();
//        mostrarBanco();
//        mostrarCuentaCorriente();
//        mostrarCuentasYDocumentosXPagar();
//        mostrarCuentasXCobrar();
//        mostrarDocumentosXCobrar();
//        mostrarInventarioSoftware();
//        mostrarGastosAnticipados();
//        mostrarAlquileresAnticipados();
//        mostrarSegurosAnticipados();
//        mostrarPapeleriaUtiles();
//        mostrarPropaganda();
//        mostrarServicios();
//        mostrarImpuestoSobreRenta();
//        mostrarSuministro();
//        mostrarIVACreditoFiscal();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMayorizacion = new javax.swing.JTable();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableMayorizacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableMayorizacion);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 1120, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void mostrarEfectivo() {
        ConexionDB db = new ConexionDB();
        Connection cn = db.conectar();
        double totalCargo = 0.0;
        double totalAbono = 0.0;
        double calculo = 0.0;

        try {
            PreparedStatement pst = cn.prepareStatement("SELECT cargo, abono FROM transacciones WHERE codigo='1101'");
            ResultSet resultado = pst.executeQuery();

            while (resultado.next()) {
                double cargo = resultado.getDouble("cargo");
                double abono = resultado.getDouble("abono");
                totalCargo += cargo;
                totalAbono += abono;
            }

            if (totalCargo > totalAbono) {
                calculo = totalCargo - totalAbono;
            }

            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET sumaDebe = ?, sumaHaber = ?, mayorizacionDebe=? WHERE codigo='1101'");
            pst1.setDouble(1, totalCargo);
            pst1.setDouble(2, totalAbono);
            pst1.setDouble(3, calculo);
            pst1.executeUpdate();

            modeloTabla.setRowCount(0); // Limpia el modelo de la tabla

            PreparedStatement pst2 = cn.prepareStatement("SELECT codigo, cuenta, sumaDebe, sumaHaber,mayorizacionDebe FROM mayorizacion");
            ResultSet resultado1 = pst2.executeQuery();

            while (resultado1.next()) {
                String codigo = resultado1.getString("codigo");
                String cuenta = resultado1.getString("cuenta");
                double sumaDebe = resultado1.getDouble("sumaDebe");
                double sumaHaber = resultado1.getDouble("sumaHaber");
                double mayorizacion = resultado1.getDouble("mayorizacionDebe");
                modeloTabla.addRow(new Object[]{codigo, cuenta, sumaDebe, sumaHaber, mayorizacion});
            }

            jTableMayorizacion.setModel(modeloTabla);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e);
        }
    }

    
    
    public void mostrarCaja() {
        ConexionDB db = new ConexionDB();
        Connection cn = db.conectar();
        double totalCargo = 0.0;
        double totalAbono = 0.0;
        double calculo = 0.0;

        try {
            PreparedStatement pst = cn.prepareStatement("SELECT cargo, abono FROM transacciones WHERE codigo='110101'");
            ResultSet resultado = pst.executeQuery();

            while (resultado.next()) {
                double cargo = resultado.getDouble("cargo");
                double abono = resultado.getDouble("abono");
                totalCargo += cargo;
                totalAbono += abono;
            }

            if (totalCargo > totalAbono) {
                calculo = totalCargo - totalAbono;
            }

            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET sumaDebe = ?, sumaHaber = ?, mayorizacionDebe=? WHERE codigo='110101'");
            pst1.setDouble(1, totalCargo);
            pst1.setDouble(2, totalAbono);
            pst1.setDouble(3, calculo);
            pst1.executeUpdate();

            modeloTabla.setRowCount(0); // Limpia el modelo de la tabla

            PreparedStatement pst2 = cn.prepareStatement("SELECT codigo, cuenta, sumaDebe, sumaHaber,mayorizacionDebe FROM mayorizacion");
            ResultSet resultado1 = pst2.executeQuery();

            while (resultado1.next()) {
                String codigo = resultado1.getString("codigo");
                String cuenta = resultado1.getString("cuenta");
                double sumaDebe = resultado1.getDouble("sumaDebe");
                double sumaHaber = resultado1.getDouble("sumaHaber");
                double mayorizacion = resultado1.getDouble("mayorizacionDebe");
                modeloTabla.addRow(new Object[]{codigo, cuenta, sumaDebe, sumaHaber, mayorizacion});
            }

            jTableMayorizacion.setModel(modeloTabla);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e);
        }
    }

//
//    public void mostrarBanco() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110102'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110102'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarCuentaCorriente() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110103'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110103'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarCuentasYDocumentosXPagar() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='1102'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '1102'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarCuentasXCobrar() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110201'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110201'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarDocumentosXCobrar() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110202'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110202'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarInventarioSoftware() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='1103'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '1103'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarGastosAnticipados() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='1104'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '1104'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarAlquileresAnticipados() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110401'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110401'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarSegurosAnticipados() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110402'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110402'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarPapeleriaUtiles() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110403'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110403'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarPropaganda() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110404'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110404'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarServicios() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110405'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110405'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarImpuestoSobreRenta() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110406'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110406'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarSuministro() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='110407'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '110407'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }
//
//    public void mostrarIVACreditoFiscal() {
//        ConexionDB db = new ConexionDB();
//        Connection cn = db.conectar();
//        // Inicializa las variables para el cargo y el abono.
//        double totalCargo = 0.0;
//        double totalAbono = 0.0;
//        double calculo = 0.0;
//        String codigo = "", cuenta = "", cargo = "", abono = "";
//        try {
//            PreparedStatement pst = cn.prepareStatement("SELECT codigo,cuenta,cargo,abono FROM transacciones WHERE codigo='1105'");
//            ResultSet resultado = pst.executeQuery();
//
//            while (resultado.next()) {
//                codigo = resultado.getString("codigo");
//                cuenta = resultado.getString("cuenta");
//                cargo = resultado.getString("cargo");
//                abono = resultado.getString("abono");
//
//                // Convierte los valores de cargo y abono a nÃºmeros y suma a las variables totales.
//                totalCargo += Double.parseDouble(cargo);
//                totalAbono += Double.parseDouble(abono);
//            }
//            if (totalCargo > totalAbono) {
//                calculo = totalCargo - totalAbono;
//            } else {
//                calculo = 0;
//            }
//
//            PreparedStatement pst1 = cn.prepareStatement("UPDATE mayorizacion SET totalDebe = ? WHERE codigo = '1105'");
//            pst1.setDouble(1, calculo); // Establecemos el valor de 'total' en la sentencia SQL.
//            double a = pst1.executeUpdate();// Ejecuta la sentencia y guarda el resultado
//            modeloTabla.addRow(new Object[]{codigo, cuenta, totalCargo, totalAbono, calculo});
//            jTableMayorizacion.setModel(modeloTabla);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error: " + e);
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMayorizacion;
    // End of variables declaration//GEN-END:variables
}
